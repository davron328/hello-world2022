{
    "version": 3,
    "terraform_version": "0.11.15",
    "serial": 2,
    "lineage": "828d5168-2101-19d2-5366-31c6fff17724",
    "modules": [
        {
            "path": [
                "root"
            ],
            "outputs": {},
            "resources": {},
            "depends_on": []
        },
        {
            "path": [
                "root",
                "helm_deploy"
            ],
            "outputs": {
                "deployment_values": {
                    "sensitive": false,
                    "type": "list",
                    "value": [
                        "# Default values for hello-world.\n# This is a YAML-formatted file.\n# Declare variables to be passed into your templates.\n\nreplicaCount: 1\n\nimage:\n  repository: hello-world-stage\n  pullPolicy: IfNotPresent\n  # Overrides the image tag whose default is the chart appVersion.\n\n\nimagePullSecrets: []\nnameOverride: \"\"\nfullnameOverride: \"\"\n\nserviceAccount:\n  # Specifies whether a service account should be created\n  create: true\n  # Annotations to add to the service account\n  annotations: {}\n  # The name of the service account to use.\n  # If not set and create is true, a name is generated using the fullname template\n  name: \"\"\n\npodAnnotations: {}\n\npodSecurityContext: {}\n  # fsGroup: 2000\n\nsecurityContext: {}\n  # capabilities:\n  #   drop:\n  #   - ALL\n  # readOnlyRootFilesystem: true\n  # runAsNonRoot: true\n  # runAsUser: 1000\n\nservice:\n  type: ClusterIP\n  port: 80\n\ningress:\n  enabled: true\n  annotations:\n    kubernetes.io/ingress.class: nginx\n    cert-manager.io/cluster-issuer: letsencrypt-prod\n  hosts:\n    - host: hello-world.davrononline.com\n      paths:\n      - \"/\"\n  tls:\n  - secretName: chart-example-tls\n    hosts:\n      - hello-world.davrononline.com\n\nresources: {}\n  # We usually recommend not to specify default resources and to leave this as a conscious\n  # choice for the user. This also increases chances charts run on environments with little\n  # resources, such as Minikube. If you do want to specify resources, uncomment the following\n  # lines, adjust them as necessary, and remove the curly braces after 'resources:'.\n  # limits:\n  #   cpu: 100m\n  #   memory: 128Mi\n  # requests:\n  #   cpu: 100m\n  #   memory: 128Mi\n\nautoscaling:\n  enabled: false\n  minReplicas: 1\n  maxReplicas: 100\n  targetCPUUtilizationPercentage: 80\n  # targetMemoryUtilizationPercentage: 80\n\nnodeSelector: {}\n\ntolerations: []\n\naffinity: {}\n"
                    ]
                },
                "success_output": {
                    "sensitive": false,
                    "type": "string",
                    "value": " hello-world helm deployment \n\n ######################### Helm Deploy #########################\n\n  Congrats! Your helm chart has deployed successfully. Please see\n  below for your chart details:\n\n  Chart Name: \"hello-world\"\n  Deployment Enviroment/Namespace: \"dev\"\n  Chart version: \" 0.1.0\"\n\n  Author: Fuchicorp\n\n ###############################################################\n\n Please use the commands below to view your deployment resources.\n\n  - View your helm deployment: \n      helm ls | grep hello-world-dev\n \n  - View your deployment pod(s): \n      kubectl get pod -n dev | grep hello-world-dev\n\n  - View your deployment service(s):\n      kubectl get service -n dev hello-world-dev \n\n\n ================================================================\n  \n  Please navigate to this address to view your application:\n     \n     URL: https://hello-world.davrononline.com/\n\n ===============================================================\n\n  "
                }
            },
            "resources": {
                "data.template_file.chart_values_template": {
                    "type": "template_file",
                    "depends_on": [
                        "local.template_all_values"
                    ],
                    "primary": {
                        "id": "4fafb15ed0c0d309830b54f77607601c65231c41313be0c01b57636ee4390912",
                        "attributes": {
                            "id": "4fafb15ed0c0d309830b54f77607601c65231c41313be0c01b57636ee4390912",
                            "rendered": "# Default values for hello-world.\n# This is a YAML-formatted file.\n# Declare variables to be passed into your templates.\n\nreplicaCount: 1\n\nimage:\n  repository: hello-world-stage\n  pullPolicy: IfNotPresent\n  # Overrides the image tag whose default is the chart appVersion.\n\n\nimagePullSecrets: []\nnameOverride: \"\"\nfullnameOverride: \"\"\n\nserviceAccount:\n  # Specifies whether a service account should be created\n  create: true\n  # Annotations to add to the service account\n  annotations: {}\n  # The name of the service account to use.\n  # If not set and create is true, a name is generated using the fullname template\n  name: \"\"\n\npodAnnotations: {}\n\npodSecurityContext: {}\n  # fsGroup: 2000\n\nsecurityContext: {}\n  # capabilities:\n  #   drop:\n  #   - ALL\n  # readOnlyRootFilesystem: true\n  # runAsNonRoot: true\n  # runAsUser: 1000\n\nservice:\n  type: ClusterIP\n  port: 80\n\ningress:\n  enabled: true\n  annotations:\n    kubernetes.io/ingress.class: nginx\n    cert-manager.io/cluster-issuer: letsencrypt-prod\n  hosts:\n    - host: hello-world.davrononline.com\n      paths:\n      - \"/\"\n  tls:\n  - secretName: chart-example-tls\n    hosts:\n      - hello-world.davrononline.com\n\nresources: {}\n  # We usually recommend not to specify default resources and to leave this as a conscious\n  # choice for the user. This also increases chances charts run on environments with little\n  # resources, such as Minikube. If you do want to specify resources, uncomment the following\n  # lines, adjust them as necessary, and remove the curly braces after 'resources:'.\n  # limits:\n  #   cpu: 100m\n  #   memory: 128Mi\n  # requests:\n  #   cpu: 100m\n  #   memory: 128Mi\n\nautoscaling:\n  enabled: false\n  minReplicas: 1\n  maxReplicas: 100\n  targetCPUUtilizationPercentage: 80\n  # targetMemoryUtilizationPercentage: 80\n\nnodeSelector: {}\n\ntolerations: []\n\naffinity: {}\n",
                            "template": "# Default values for hello-world.\n# This is a YAML-formatted file.\n# Declare variables to be passed into your templates.\n\nreplicaCount: 1\n\nimage:\n  repository: hello-world-stage\n  pullPolicy: IfNotPresent\n  # Overrides the image tag whose default is the chart appVersion.\n\n\nimagePullSecrets: []\nnameOverride: \"\"\nfullnameOverride: \"\"\n\nserviceAccount:\n  # Specifies whether a service account should be created\n  create: true\n  # Annotations to add to the service account\n  annotations: {}\n  # The name of the service account to use.\n  # If not set and create is true, a name is generated using the fullname template\n  name: \"\"\n\npodAnnotations: {}\n\npodSecurityContext: {}\n  # fsGroup: 2000\n\nsecurityContext: {}\n  # capabilities:\n  #   drop:\n  #   - ALL\n  # readOnlyRootFilesystem: true\n  # runAsNonRoot: true\n  # runAsUser: 1000\n\nservice:\n  type: ClusterIP\n  port: 80\n\ningress:\n  enabled: true\n  annotations:\n    kubernetes.io/ingress.class: nginx\n    cert-manager.io/cluster-issuer: letsencrypt-prod\n  hosts:\n    - host: ${deployment_endpoint}\n      paths:\n      - \"/\"\n  tls:\n  - secretName: chart-example-tls\n    hosts:\n      - ${deployment_endpoint}\n\nresources: {}\n  # We usually recommend not to specify default resources and to leave this as a conscious\n  # choice for the user. This also increases chances charts run on environments with little\n  # resources, such as Minikube. If you do want to specify resources, uncomment the following\n  # lines, adjust them as necessary, and remove the curly braces after 'resources:'.\n  # limits:\n  #   cpu: 100m\n  #   memory: 128Mi\n  # requests:\n  #   cpu: 100m\n  #   memory: 128Mi\n\nautoscaling:\n  enabled: false\n  minReplicas: 1\n  maxReplicas: 100\n  targetCPUUtilizationPercentage: 80\n  # targetMemoryUtilizationPercentage: 80\n\nnodeSelector: {}\n\ntolerations: []\n\naffinity: {}\n",
                            "vars.%": "3",
                            "vars.deployment_endpoint": "hello-world.davrononline.com",
                            "vars.deployment_name": "hello-world",
                            "vars.env_vars": ""
                        },
                        "meta": {},
                        "tainted": false
                    },
                    "deposed": [],
                    "provider": "module.helm_deploy.provider.template"
                },
                "helm_release.helm_deployment": {
                    "type": "helm_release",
                    "depends_on": [
                        "data.template_file.chart_values_template",
                        "local.recreate_pods",
                        "local.timeout"
                    ],
                    "primary": {
                        "id": "hello-world-dev",
                        "attributes": {
                            "atomic": "false",
                            "chart": "./charts/hello-world",
                            "cleanup_on_fail": "false",
                            "create_namespace": "false",
                            "dependency_update": "false",
                            "disable_crd_hooks": "false",
                            "disable_openapi_validation": "false",
                            "disable_webhooks": "false",
                            "force_update": "false",
                            "id": "hello-world-dev",
                            "lint": "false",
                            "max_history": "0",
                            "metadata.#": "1",
                            "metadata.0.app_version": "1.16.0",
                            "metadata.0.chart": "hello-world",
                            "metadata.0.name": "hello-world-dev",
                            "metadata.0.namespace": "dev",
                            "metadata.0.revision": "1",
                            "metadata.0.values": "{\"affinity\":{},\"autoscaling\":{\"enabled\":false,\"maxReplicas\":100,\"minReplicas\":1,\"targetCPUUtilizationPercentage\":80},\"fullnameOverride\":\"\",\"image\":{\"pullPolicy\":\"IfNotPresent\",\"repository\":\"hello-world-stage\"},\"imagePullSecrets\":[],\"ingress\":{\"annotations\":{\"cert-manager.io/cluster-issuer\":\"letsencrypt-prod\",\"kubernetes.io/ingress.class\":\"nginx\"},\"enabled\":true,\"hosts\":[{\"host\":\"hello-world.davrononline.com\",\"paths\":[\"/\"]}],\"tls\":[{\"hosts\":[\"hello-world.davrononline.com\"],\"secretName\":\"chart-example-tls\"}]},\"nameOverride\":\"\",\"nodeSelector\":{},\"podAnnotations\":{},\"podSecurityContext\":{},\"replicaCount\":1,\"resources\":{},\"securityContext\":{},\"service\":{\"port\":80,\"type\":\"ClusterIP\"},\"serviceAccount\":{\"annotations\":{},\"create\":true,\"name\":\"\"},\"tolerations\":[]}",
                            "metadata.0.version": "0.1.0",
                            "name": "hello-world-dev",
                            "namespace": "dev",
                            "recreate_pods": "false",
                            "render_subchart_notes": "true",
                            "replace": "false",
                            "reset_values": "false",
                            "reuse_values": "false",
                            "skip_crds": "false",
                            "status": "failed",
                            "timeout": "400",
                            "values.#": "1",
                            "values.0": "# Default values for hello-world.\n# This is a YAML-formatted file.\n# Declare variables to be passed into your templates.\n\nreplicaCount: 1\n\nimage:\n  repository: hello-world-stage\n  pullPolicy: IfNotPresent\n  # Overrides the image tag whose default is the chart appVersion.\n\n\nimagePullSecrets: []\nnameOverride: \"\"\nfullnameOverride: \"\"\n\nserviceAccount:\n  # Specifies whether a service account should be created\n  create: true\n  # Annotations to add to the service account\n  annotations: {}\n  # The name of the service account to use.\n  # If not set and create is true, a name is generated using the fullname template\n  name: \"\"\n\npodAnnotations: {}\n\npodSecurityContext: {}\n  # fsGroup: 2000\n\nsecurityContext: {}\n  # capabilities:\n  #   drop:\n  #   - ALL\n  # readOnlyRootFilesystem: true\n  # runAsNonRoot: true\n  # runAsUser: 1000\n\nservice:\n  type: ClusterIP\n  port: 80\n\ningress:\n  enabled: true\n  annotations:\n    kubernetes.io/ingress.class: nginx\n    cert-manager.io/cluster-issuer: letsencrypt-prod\n  hosts:\n    - host: hello-world.davrononline.com\n      paths:\n      - \"/\"\n  tls:\n  - secretName: chart-example-tls\n    hosts:\n      - hello-world.davrononline.com\n\nresources: {}\n  # We usually recommend not to specify default resources and to leave this as a conscious\n  # choice for the user. This also increases chances charts run on environments with little\n  # resources, such as Minikube. If you do want to specify resources, uncomment the following\n  # lines, adjust them as necessary, and remove the curly braces after 'resources:'.\n  # limits:\n  #   cpu: 100m\n  #   memory: 128Mi\n  # requests:\n  #   cpu: 100m\n  #   memory: 128Mi\n\nautoscaling:\n  enabled: false\n  minReplicas: 1\n  maxReplicas: 100\n  targetCPUUtilizationPercentage: 80\n  # targetMemoryUtilizationPercentage: 80\n\nnodeSelector: {}\n\ntolerations: []\n\naffinity: {}",
                            "verify": "false",
                            "version": "0.1.0",
                            "wait": "true"
                        },
                        "meta": {},
                        "tainted": false
                    },
                    "deposed": [],
                    "provider": "module.helm_deploy.provider.helm"
                }
            },
            "depends_on": []
        }
    ]
}
